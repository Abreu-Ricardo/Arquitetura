<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>__handle_irq_event_percpu (164,452,200 samples, 0.02%)</title><rect x="1187.3" y="197" width="0.2" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1190.26" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (84,826,847 samples, 0.01%)</title><rect x="1189.2" y="213" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1192.24" y="223.5" ></text>
</g>
<g >
<title>common_interrupt (624,695,361 samples, 0.08%)</title><rect x="616.6" y="261" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="619.63" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event (164,452,200 samples, 0.02%)</title><rect x="1187.3" y="213" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.26" y="223.5" ></text>
</g>
<g >
<title>handle_softirqs (459,869,137 samples, 0.06%)</title><rect x="616.9" y="213" width="0.7" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="619.88" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (87,301,853 samples, 0.01%)</title><rect x="617.8" y="133" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="620.82" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (949,217,356 samples, 0.12%)</title><rect x="1187.7" y="245" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.68" y="255.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (296,243,541 samples, 0.04%)</title><rect x="617.1" y="165" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="620.12" y="175.5" ></text>
</g>
<g >
<title>_nv039899rm (159,999,749 samples, 0.02%)</title><rect x="1186.9" y="277" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1189.95" y="287.5" ></text>
</g>
<g >
<title>xhci_msi_irq (164,826,176 samples, 0.02%)</title><rect x="616.6" y="181" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="619.63" y="191.5" ></text>
</g>
<g >
<title>__napi_poll (163,625,596 samples, 0.02%)</title><rect x="616.9" y="181" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="619.88" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (459,869,137 samples, 0.06%)</title><rect x="616.9" y="245" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="619.88" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,446,420,490 samples, 0.18%)</title><rect x="1187.6" y="277" width="2.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.57" y="287.5" ></text>
</g>
<g >
<title>srso_safe_ret (454,792,436 samples, 0.06%)</title><rect x="618.7" y="133" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="621.69" y="143.5" ></text>
</g>
<g >
<title>wake_up_process (84,627,573 samples, 0.01%)</title><rect x="620.7" y="133" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="623.73" y="143.5" ></text>
</g>
<g >
<title>napi_complete_done (80,863,525 samples, 0.01%)</title><rect x="620.4" y="149" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="623.36" y="159.5" ></text>
</g>
<g >
<title>rtl8169_poll (163,625,596 samples, 0.02%)</title><rect x="616.9" y="165" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="619.88" y="175.5" ></text>
</g>
<g >
<title>wake_up_process (123,327,647 samples, 0.02%)</title><rect x="1187.3" y="165" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1190.26" y="175.5" ></text>
</g>
<g >
<title>schedule (206,373,330 samples, 0.03%)</title><rect x="621.3" y="213" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="624.31" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (949,217,356 samples, 0.12%)</title><rect x="1187.7" y="229" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.68" y="239.5" ></text>
</g>
<g >
<title>prepare_task_switch (82,511,145 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1192.55" y="191.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="197" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.75" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1,441,415,900 samples, 0.18%)</title><rect x="617.9" y="165" width="2.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="620.95" y="175.5" ></text>
</g>
<g >
<title>perf_event_task_tick (169,877,108 samples, 0.02%)</title><rect x="1188.4" y="133" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1191.36" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,404,795,288 samples, 0.18%)</title><rect x="1187.6" y="261" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.63" y="271.5" ></text>
</g>
<g >
<title>__schedule (206,373,330 samples, 0.03%)</title><rect x="621.3" y="197" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="624.31" y="207.5" ></text>
</g>
<g >
<title>update_curr (81,864,056 samples, 0.01%)</title><rect x="621.3" y="133" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="624.31" y="143.5" ></text>
</g>
<g >
<title>__common_interrupt (164,826,176 samples, 0.02%)</title><rect x="616.6" y="245" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="619.63" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (123,645,703 samples, 0.02%)</title><rect x="617.8" y="181" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="620.76" y="191.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (292,380,188 samples, 0.04%)</title><rect x="621.2" y="261" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="624.18" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,441,415,900 samples, 0.18%)</title><rect x="617.9" y="181" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="620.95" y="191.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (90,603,119 samples, 0.01%)</title><rect x="1189.7" y="261" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1192.74" y="271.5" ></text>
</g>
<g >
<title>update_wall_time (87,301,853 samples, 0.01%)</title><rect x="617.8" y="149" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="620.82" y="159.5" ></text>
</g>
<g >
<title>pick_next_task_fair (87,051,630 samples, 0.01%)</title><rect x="620.9" y="165" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="623.86" y="175.5" ></text>
</g>
<g >
<title>irq_exit_rcu (366,872,055 samples, 0.05%)</title><rect x="620.3" y="245" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="623.30" y="255.5" ></text>
</g>
<g >
<title>schedule (128,924,730 samples, 0.02%)</title><rect x="620.9" y="213" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="623.86" y="223.5" ></text>
</g>
<g >
<title>update_process_times (618,830,797 samples, 0.08%)</title><rect x="1188.2" y="165" width="0.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.18" y="175.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (208,490,306 samples, 0.03%)</title><rect x="1189.4" y="229" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit (128,930,524 samples, 0.02%)</title><rect x="620.9" y="245" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="623.86" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (203,794,959 samples, 0.03%)</title><rect x="1187.3" y="261" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.26" y="271.5" ></text>
</g>
<g >
<title>napi_gro_flush (80,863,525 samples, 0.01%)</title><rect x="620.4" y="133" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="623.36" y="143.5" ></text>
</g>
<g >
<title>timekeeping_advance (83,267,710 samples, 0.01%)</title><rect x="1188.0" y="133" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1190.99" y="143.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (80,863,525 samples, 0.01%)</title><rect x="620.4" y="101" width="0.1" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="623.36" y="111.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (82,511,145 samples, 0.01%)</title><rect x="1189.6" y="165" width="0.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1192.55" y="175.5" ></text>
</g>
<g >
<title>asm_common_interrupt (624,695,361 samples, 0.08%)</title><rect x="616.6" y="277" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="619.63" y="287.5" ></text>
</g>
<g >
<title>pick_next_task (87,051,630 samples, 0.01%)</title><rect x="620.9" y="181" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="623.86" y="191.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx (212,873,874 samples, 0.03%)</title><rect x="617.2" y="53" width="0.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="620.25" y="63.5" ></text>
</g>
<g >
<title>enqueue_task (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="133" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1190.75" y="143.5" ></text>
</g>
<g >
<title>usb_submit_urb (212,873,874 samples, 0.03%)</title><rect x="617.2" y="117" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="620.25" y="127.5" ></text>
</g>
<g >
<title>rcu_core_si (79,349,127 samples, 0.01%)</title><rect x="620.6" y="197" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="623.61" y="207.5" ></text>
</g>
<g >
<title>pick_next_task (166,469,243 samples, 0.02%)</title><rect x="621.3" y="181" width="0.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="624.31" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,776,302,997 samples, 0.23%)</title><rect x="617.6" y="229" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="620.63" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (206,752,173 samples, 0.03%)</title><rect x="618.4" y="133" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="621.38" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,273,508,794 samples, 0.29%)</title><rect x="617.6" y="261" width="3.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="620.63" y="271.5" ></text>
</g>
<g >
<title>run_timer_softirq (84,627,573 samples, 0.01%)</title><rect x="620.7" y="197" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="623.73" y="207.5" ></text>
</g>
<g >
<title>xhci_queue_isoc_tx_prepare (212,873,874 samples, 0.03%)</title><rect x="617.2" y="69" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="620.25" y="79.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (212,873,874 samples, 0.03%)</title><rect x="617.2" y="85" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="620.25" y="95.5" ></text>
</g>
<g >
<title>update_load_avg (363,365,190 samples, 0.05%)</title><rect x="619.5" y="117" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="622.51" y="127.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (296,243,541 samples, 0.04%)</title><rect x="617.1" y="181" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="620.12" y="191.5" ></text>
</g>
<g >
<title>tasklet_hi_action (296,243,541 samples, 0.04%)</title><rect x="617.1" y="197" width="0.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="620.12" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (366,872,055 samples, 0.05%)</title><rect x="620.3" y="213" width="0.6" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="623.30" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (128,930,252 samples, 0.02%)</title><rect x="620.9" y="229" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="623.86" y="239.5" ></text>
</g>
<g >
<title>pick_next_task_fair (84,208,073 samples, 0.01%)</title><rect x="1189.4" y="165" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.43" y="175.5" ></text>
</g>
<g >
<title>rcu_core (79,349,127 samples, 0.01%)</title><rect x="620.6" y="181" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="623.61" y="191.5" ></text>
</g>
<g >
<title>napi_gro_complete.constprop.0 (80,863,525 samples, 0.01%)</title><rect x="620.4" y="117" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="623.36" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,650,718,414 samples, 0.21%)</title><rect x="617.6" y="213" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="620.63" y="223.5" ></text>
</g>
<g >
<title>__common_interrupt (164,452,200 samples, 0.02%)</title><rect x="1187.3" y="245" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.26" y="255.5" ></text>
</g>
<g >
<title>rtl8169_poll (162,899,766 samples, 0.02%)</title><rect x="620.4" y="165" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="623.36" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (949,217,356 samples, 0.12%)</title><rect x="1187.7" y="213" width="1.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.68" y="223.5" ></text>
</g>
<g >
<title>pick_next_task (84,208,073 samples, 0.01%)</title><rect x="1189.4" y="181" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1192.43" y="191.5" ></text>
</g>
<g >
<title>update_wall_time (122,627,335 samples, 0.02%)</title><rect x="1187.9" y="149" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1190.93" y="159.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (78,496,272 samples, 0.01%)</title><rect x="619.6" y="101" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="622.62" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (334,561,838 samples, 0.04%)</title><rect x="621.1" y="277" width="0.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="624.11" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (535,881,773 samples, 0.07%)</title><rect x="1188.3" y="149" width="0.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.31" y="159.5" ></text>
</g>
<g >
<title>xhci_ring_ep_doorbell (81,995,733 samples, 0.01%)</title><rect x="617.4" y="37" width="0.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="620.44" y="47.5" ></text>
</g>
<g >
<title>net_rx_action (163,625,596 samples, 0.02%)</title><rect x="616.9" y="197" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="619.88" y="207.5" ></text>
</g>
<g >
<title>_nv039899rm (119,235,058 samples, 0.02%)</title><rect x="616.4" y="277" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="619.45" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,318,165,192 samples, 0.30%)</title><rect x="617.6" y="277" width="3.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="620.57" y="287.5" ></text>
</g>
<g >
<title>__irq_wake_thread (123,327,647 samples, 0.02%)</title><rect x="1187.3" y="181" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1190.26" y="191.5" ></text>
</g>
<g >
<title>try_to_wake_up (85,200,167 samples, 0.01%)</title><rect x="1187.3" y="149" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1190.26" y="159.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="69" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1190.75" y="79.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (169,877,108 samples, 0.02%)</title><rect x="1188.4" y="117" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1191.36" y="127.5" ></text>
</g>
<g >
<title>try_to_wake_up (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="165" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1190.75" y="175.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (79,651,971 samples, 0.01%)</title><rect x="618.0" y="149" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="621.01" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (824,710,161 samples, 0.11%)</title><rect x="1187.9" y="197" width="1.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1190.87" y="207.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (164,361,544 samples, 0.02%)</title><rect x="1187.9" y="165" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.87" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (90,603,119 samples, 0.01%)</title><rect x="1189.7" y="277" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.74" y="287.5" ></text>
</g>
<g >
<title>put_prev_entity (122,432,102 samples, 0.02%)</title><rect x="621.3" y="149" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="624.31" y="159.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (212,873,874 samples, 0.03%)</title><rect x="617.2" y="101" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="620.25" y="111.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (366,872,055 samples, 0.05%)</title><rect x="620.3" y="229" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="623.30" y="239.5" ></text>
</g>
<g >
<title>task_tick_fair (449,807,225 samples, 0.06%)</title><rect x="619.4" y="133" width="0.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="622.38" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,777,706,167 samples, 0.23%)</title><rect x="617.6" y="245" width="2.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="620.63" y="255.5" ></text>
</g>
<g >
<title>handle_irq_event (164,826,176 samples, 0.02%)</title><rect x="616.6" y="213" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="619.63" y="223.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (206,752,173 samples, 0.03%)</title><rect x="618.4" y="117" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="621.38" y="127.5" ></text>
</g>
<g >
<title>net_rx_action (162,899,766 samples, 0.02%)</title><rect x="620.4" y="197" width="0.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="623.36" y="207.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (80,863,525 samples, 0.01%)</title><rect x="620.4" y="85" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="623.36" y="95.5" ></text>
</g>
<g >
<title>update_load_avg (203,482,860 samples, 0.03%)</title><rect x="1188.8" y="117" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.81" y="127.5" ></text>
</g>
<g >
<title>__run_timers (84,627,573 samples, 0.01%)</title><rect x="620.7" y="181" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="623.73" y="191.5" ></text>
</g>
<g >
<title>pick_next_task_fair (166,469,243 samples, 0.02%)</title><rect x="621.3" y="165" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="624.31" y="175.5" ></text>
</g>
<g >
<title>ipv6_list_rcv (80,863,525 samples, 0.01%)</title><rect x="620.4" y="69" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="623.36" y="79.5" ></text>
</g>
<g >
<title>irqentry_exit (208,490,530 samples, 0.03%)</title><rect x="1189.4" y="245" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1192.36" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (126,317,004 samples, 0.02%)</title><rect x="1189.2" y="245" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1192.17" y="255.5" ></text>
</g>
<g >
<title>xhci_update_erst_dequeue (83,258,600 samples, 0.01%)</title><rect x="616.8" y="149" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="619.75" y="159.5" ></text>
</g>
<g >
<title>try_to_wake_up (84,627,573 samples, 0.01%)</title><rect x="620.7" y="117" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="623.73" y="127.5" ></text>
</g>
<g >
<title>napi_complete_done (83,168,457 samples, 0.01%)</title><rect x="617.0" y="149" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="620.00" y="159.5" ></text>
</g>
<g >
<title>ttwu_do_activate (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="149" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1190.75" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,565,061,603 samples, 0.20%)</title><rect x="617.8" y="197" width="2.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="620.76" y="207.5" ></text>
</g>
<g >
<title>a.out (785,321,580,698 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >a.out</text>
</g>
<g >
<title>asm_common_interrupt (203,794,959 samples, 0.03%)</title><rect x="1187.3" y="277" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.26" y="287.5" ></text>
</g>
<g >
<title>update_load_avg (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="85" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1190.75" y="95.5" ></text>
</g>
<g >
<title>handle_edge_irq (164,826,176 samples, 0.02%)</title><rect x="616.6" y="229" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="619.63" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (123,645,703 samples, 0.02%)</title><rect x="617.8" y="165" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="620.76" y="175.5" ></text>
</g>
<g >
<title>enqueue_task_fair (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="117" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1190.75" y="127.5" ></text>
</g>
<g >
<title>__update_load_avg_se (78,759,147 samples, 0.01%)</title><rect x="619.7" y="101" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="622.74" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (1,320,027,428 samples, 0.17%)</title><rect x="618.1" y="149" width="2.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="621.13" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (292,380,188 samples, 0.04%)</title><rect x="621.2" y="229" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="624.18" y="239.5" ></text>
</g>
<g >
<title>all (785,321,580,698 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (82,995,245 samples, 0.01%)</title><rect x="1188.8" y="101" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.81" y="111.5" ></text>
</g>
<g >
<title>nao_processa (407,042,567,126 samples, 51.83%)</title><rect x="10.0" y="293" width="611.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.01" y="303.5" >nao_processa</text>
</g>
<g >
<title>snd_complete_urb (296,243,541 samples, 0.04%)</title><rect x="617.1" y="133" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="620.12" y="143.5" ></text>
</g>
<g >
<title>ip6_sublist_rcv (80,863,525 samples, 0.01%)</title><rect x="620.4" y="53" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="623.36" y="63.5" ></text>
</g>
<g >
<title>soh_processa (378,274,737,376 samples, 48.17%)</title><rect x="621.6" y="293" width="568.4" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="624.62" y="303.5" >soh_processa</text>
</g>
<g >
<title>_raw_spin_lock (83,616,052 samples, 0.01%)</title><rect x="618.2" y="133" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="621.20" y="143.5" ></text>
</g>
<g >
<title>xhci_get_isoc_frame_id (130,878,141 samples, 0.02%)</title><rect x="617.2" y="37" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="620.25" y="47.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (164,361,544 samples, 0.02%)</title><rect x="1187.9" y="181" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1190.87" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (328,033,248 samples, 0.04%)</title><rect x="1188.6" y="133" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.62" y="143.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (164,826,176 samples, 0.02%)</title><rect x="616.6" y="197" width="0.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="619.63" y="207.5" ></text>
</g>
<g >
<title>handle_edge_irq (164,452,200 samples, 0.02%)</title><rect x="1187.3" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.26" y="239.5" ></text>
</g>
<g >
<title>enqueue_entity (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="101" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1190.75" y="111.5" ></text>
</g>
<g >
<title>wake_up_process (83,252,254 samples, 0.01%)</title><rect x="1187.7" y="181" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1190.75" y="191.5" ></text>
</g>
<g >
<title>irqentry_exit (292,380,188 samples, 0.04%)</title><rect x="621.2" y="245" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="624.18" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (660,348,617 samples, 0.08%)</title><rect x="1188.1" y="181" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.12" y="191.5" ></text>
</g>
<g >
<title>xhci_irq (164,826,176 samples, 0.02%)</title><rect x="616.6" y="165" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="619.63" y="175.5" ></text>
</g>
<g >
<title>__schedule (166,723,775 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.43" y="207.5" ></text>
</g>
<g >
<title>process_timeout (84,627,573 samples, 0.01%)</title><rect x="620.7" y="149" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="623.73" y="159.5" ></text>
</g>
<g >
<title>call_timer_fn (84,627,573 samples, 0.01%)</title><rect x="620.7" y="165" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="623.73" y="175.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (296,243,541 samples, 0.04%)</title><rect x="617.1" y="149" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="620.12" y="159.5" ></text>
</g>
<g >
<title>start_thread (785,317,322,607 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.01" y="319.5" >start_thread</text>
</g>
<g >
<title>__irq_exit_rcu (459,869,137 samples, 0.06%)</title><rect x="616.9" y="229" width="0.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="619.88" y="239.5" ></text>
</g>
<g >
<title>perf_event_context_sched_out (82,511,145 samples, 0.01%)</title><rect x="1189.6" y="149" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1192.55" y="159.5" ></text>
</g>
<g >
<title>__schedule (128,924,698 samples, 0.02%)</title><rect x="620.9" y="197" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="623.86" y="207.5" ></text>
</g>
<g >
<title>schedule (166,723,839 samples, 0.02%)</title><rect x="1189.4" y="213" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1192.43" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (126,317,004 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1192.17" y="239.5" ></text>
</g>
<g >
<title>__napi_poll (162,899,766 samples, 0.02%)</title><rect x="620.4" y="181" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="623.36" y="191.5" ></text>
</g>
</g>
</svg>
