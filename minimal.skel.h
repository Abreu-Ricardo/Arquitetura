/* SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause) */

/* THIS FILE IS AUTOGENERATED BY BPFTOOL! */
#ifndef __ESPACO_KERNEL_SKEL_H__
#define __ESPACO_KERNEL_SKEL_H__

#include <errno.h>
#include <stdlib.h>
#include <bpf/libbpf.h>

struct espaco_kernel {
	struct bpf_object_skeleton *skeleton;
	struct bpf_object *obj;
	struct {
		struct bpf_map *mapa_fd;
		struct bpf_map *rodata_str1_1;
	} maps;
	struct {
		struct bpf_program *teste;
	} progs;
	struct {
		struct bpf_link *teste;
	} links;

#ifdef __cplusplus
	static inline struct espaco_kernel *open(const struct bpf_object_open_opts *opts = nullptr);
	static inline struct espaco_kernel *open_and_load();
	static inline int load(struct espaco_kernel *skel);
	static inline int attach(struct espaco_kernel *skel);
	static inline void detach(struct espaco_kernel *skel);
	static inline void destroy(struct espaco_kernel *skel);
	static inline const void *elf_bytes(size_t *sz);
#endif /* __cplusplus */
};

static void
espaco_kernel__destroy(struct espaco_kernel *obj)
{
	if (!obj)
		return;
	if (obj->skeleton)
		bpf_object__destroy_skeleton(obj->skeleton);
	free(obj);
}

static inline int
espaco_kernel__create_skeleton(struct espaco_kernel *obj);

static inline struct espaco_kernel *
espaco_kernel__open_opts(const struct bpf_object_open_opts *opts)
{
	struct espaco_kernel *obj;
	int err;

	obj = (struct espaco_kernel *)calloc(1, sizeof(*obj));
	if (!obj) {
		errno = ENOMEM;
		return NULL;
	}

	err = espaco_kernel__create_skeleton(obj);
	if (err)
		goto err_out;

	err = bpf_object__open_skeleton(obj->skeleton, opts);
	if (err)
		goto err_out;

	return obj;
err_out:
	espaco_kernel__destroy(obj);
	errno = -err;
	return NULL;
}

static inline struct espaco_kernel *
espaco_kernel__open(void)
{
	return espaco_kernel__open_opts(NULL);
}

static inline int
espaco_kernel__load(struct espaco_kernel *obj)
{
	return bpf_object__load_skeleton(obj->skeleton);
}

static inline struct espaco_kernel *
espaco_kernel__open_and_load(void)
{
	struct espaco_kernel *obj;
	int err;

	obj = espaco_kernel__open();
	if (!obj)
		return NULL;
	err = espaco_kernel__load(obj);
	if (err) {
		espaco_kernel__destroy(obj);
		errno = -err;
		return NULL;
	}
	return obj;
}

static inline int
espaco_kernel__attach(struct espaco_kernel *obj)
{
	return bpf_object__attach_skeleton(obj->skeleton);
}

static inline void
espaco_kernel__detach(struct espaco_kernel *obj)
{
	bpf_object__detach_skeleton(obj->skeleton);
}

static inline const void *espaco_kernel__elf_bytes(size_t *sz);

static inline int
espaco_kernel__create_skeleton(struct espaco_kernel *obj)
{
	struct bpf_object_skeleton *s;
	int err;

	s = (struct bpf_object_skeleton *)calloc(1, sizeof(*s));
	if (!s)	{
		err = -ENOMEM;
		goto err;
	}

	s->sz = sizeof(*s);
	s->name = "espaco_kernel";
	s->obj = &obj->obj;

	/* maps */
	s->map_cnt = 2;
	s->map_skel_sz = sizeof(*s->maps);
	s->maps = (struct bpf_map_skeleton *)calloc(s->map_cnt, s->map_skel_sz);
	if (!s->maps) {
		err = -ENOMEM;
		goto err;
	}

	s->maps[0].name = "mapa_fd";
	s->maps[0].map = &obj->maps.mapa_fd;

	s->maps[1].name = ".rodata.str1.1";
	s->maps[1].map = &obj->maps.rodata_str1_1;

	/* programs */
	s->prog_cnt = 1;
	s->prog_skel_sz = sizeof(*s->progs);
	s->progs = (struct bpf_prog_skeleton *)calloc(s->prog_cnt, s->prog_skel_sz);
	if (!s->progs) {
		err = -ENOMEM;
		goto err;
	}

	s->progs[0].name = "teste";
	s->progs[0].prog = &obj->progs.teste;
	s->progs[0].link = &obj->links.teste;

	s->data = espaco_kernel__elf_bytes(&s->data_sz);

	obj->skeleton = s;
	return 0;
err:
	bpf_object__destroy_skeleton(s);
	return err;
}

static inline const void *espaco_kernel__elf_bytes(size_t *sz)
{
	static const char data[] __attribute__((__aligned__(8))) = "\
\x7f\x45\x4c\x46\x02\x01\x01\0\0\0\0\0\0\0\0\0\x01\0\xf7\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x20\x15\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\x40\0\x1c\0\
\x01\0\xb7\x06\0\0\0\0\0\0\x63\x6a\xfc\xff\0\0\0\0\xbf\xa2\0\0\0\0\0\0\x07\x02\
\0\0\xfc\xff\xff\xff\x18\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x85\0\0\0\x01\0\0\0\
\x15\0\x0f\0\0\0\0\0\x73\x6a\xf8\xff\0\0\0\0\x18\x01\0\0\x61\x70\x61\x3a\0\0\0\
\0\x20\x25\x64\x0a\x7b\x1a\xf0\xff\0\0\0\0\x18\x01\0\0\x20\x66\x64\x20\0\0\0\0\
\x6e\x6f\x20\x6d\x7b\x1a\xe8\xff\0\0\0\0\x18\x01\0\0\x56\x61\x6c\x6f\0\0\0\0\
\x72\x20\x64\x6f\x7b\x1a\xe0\xff\0\0\0\0\x79\x03\0\0\0\0\0\0\xbf\xa1\0\0\0\0\0\
\0\x07\x01\0\0\xe0\xff\xff\xff\xb7\x02\0\0\x19\0\0\0\x85\0\0\0\x06\0\0\0\xb7\0\
\0\0\x02\0\0\0\x95\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x56\x61\x6c\x6f\x72\x20\x64\x6f\x20\x66\x64\
\x20\x6e\x6f\x20\x6d\x61\x70\x61\x3a\x20\x25\x64\x0a\0\x47\x50\x4c\0\x25\0\0\0\
\x05\0\x08\0\x02\0\0\0\x08\0\0\0\x16\0\0\0\x04\x08\x10\x02\x30\x9f\x04\x10\xc8\
\x01\x02\x7a\x1c\0\x04\x38\xb8\x01\x01\x50\0\x01\x11\x01\x25\x25\x13\x05\x03\
\x25\x72\x17\x10\x17\x1b\x25\x11\x1b\x12\x06\x73\x17\x8c\x01\x17\0\0\x02\x34\0\
\x03\x25\x49\x13\x3f\x19\x3a\x0b\x3b\x0b\x02\x18\0\0\x03\x01\x01\x49\x13\0\0\
\x04\x21\0\x49\x13\x37\x0b\0\0\x05\x24\0\x03\x25\x3e\x0b\x0b\x0b\0\0\x06\x24\0\
\x03\x25\x0b\x0b\x3e\x0b\0\0\x07\x13\x01\x03\x25\x0b\x0b\x3a\x0b\x3b\x0b\0\0\
\x08\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x0b\x38\x0b\0\0\x09\x0f\0\x49\x13\0\0\
\x0a\x16\0\x49\x13\x03\x25\x3a\x0b\x3b\x0b\0\0\x0b\x34\0\x03\x25\x49\x13\x3a\
\x0b\x3b\x0b\0\0\x0c\x15\x01\x49\x13\x27\x19\0\0\x0d\x05\0\x49\x13\0\0\x0e\x0f\
\0\0\0\x0f\x26\0\0\0\x10\x18\0\0\0\x11\x26\0\x49\x13\0\0\x12\x04\x01\x49\x13\
\x03\x25\x0b\x0b\x3a\x0b\x3b\x05\0\0\x13\x28\0\x03\x25\x1c\x0f\0\0\x14\x2e\x01\
\x11\x1b\x12\x06\x40\x18\x7a\x19\x03\x25\x3a\x0b\x3b\x0b\x27\x19\x49\x13\x3f\
\x19\0\0\x15\x05\0\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x16\x34\0\x02\x22\x03\
\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x17\x0b\x01\x11\x1b\x12\x06\0\0\x18\x34\0\x02\
\x18\x03\x25\x3a\x0b\x3b\x0b\x49\x13\0\0\x19\x13\x01\x03\x25\x0b\x0b\x3a\x0b\
\x3b\x05\0\0\x1a\x0d\0\x03\x25\x49\x13\x3a\x0b\x3b\x05\x38\x0b\0\0\0\xcc\x01\0\
\0\x05\0\x01\x08\0\0\0\0\x01\0\x0c\0\x01\x08\0\0\0\0\0\0\0\x02\x02\xc8\0\0\0\
\x08\0\0\0\x0c\0\0\0\x02\x03\x32\0\0\0\x01\x3a\x02\xa1\0\x03\x3e\0\0\0\x04\x42\
\0\0\0\x04\0\x05\x04\x06\x01\x06\x05\x08\x07\x02\x06\x51\0\0\0\x01\x1b\x02\xa1\
\x01\x07\x10\x28\x01\x15\x08\x07\x84\0\0\0\x01\x16\0\x08\x09\x99\0\0\0\x01\x17\
\x08\x08\x0a\xaa\0\0\0\x01\x18\x10\x08\x0d\xbb\0\0\0\x01\x19\x18\x08\x0f\x99\0\
\0\0\x01\x1a\x20\0\x09\x89\0\0\0\x03\x95\0\0\0\x04\x42\0\0\0\x02\0\x05\x08\x05\
\x04\x09\x9e\0\0\0\x03\x95\0\0\0\x04\x42\0\0\0\x01\0\x09\xaf\0\0\0\x0a\xb7\0\0\
\0\x0c\x02\x1b\x05\x0b\x07\x04\x09\xc0\0\0\0\x05\x0e\x07\x08\x0b\x11\xcc\0\0\0\
\x03\x32\x09\xd1\0\0\0\x0c\xe1\0\0\0\x0d\xe1\0\0\0\x0d\xe2\0\0\0\0\x0e\x09\xe7\
\0\0\0\x0f\x0b\x12\xf0\0\0\0\x03\xab\x09\xf5\0\0\0\x0c\x06\x01\0\0\x0d\x0a\x01\
\0\0\x0d\xaf\0\0\0\x10\0\x05\x13\x05\x08\x09\x0f\x01\0\0\x11\x3e\0\0\0\x12\xb7\
\0\0\0\x19\x04\x04\x4a\x15\x13\x14\0\x13\x15\x01\x13\x16\x02\x13\x17\x03\x13\
\x18\x04\0\x14\x02\xc8\0\0\0\x01\x5a\x1a\x01\x2c\x95\0\0\0\x15\x1f\x01\x2c\x87\
\x01\0\0\x16\0\x0a\x01\x2d\xaf\0\0\0\x16\x01\x1c\x01\x2e\x76\x01\0\0\x17\x03\
\x78\0\0\0\x18\x02\x91\0\x1b\x01\x34\x6a\x01\0\0\0\0\x03\x3e\0\0\0\x04\x42\0\0\
\0\x19\0\x09\x7b\x01\0\0\x0a\x83\x01\0\0\x1e\x02\x1f\x05\x1d\x07\x08\x09\x8c\
\x01\0\0\x19\x26\x18\x04\x55\x15\x1a\x20\xaf\0\0\0\x04\x56\x15\0\x1a\x21\xaf\0\
\0\0\x04\x57\x15\x04\x1a\x22\xaf\0\0\0\x04\x58\x15\x08\x1a\x23\xaf\0\0\0\x04\
\x5a\x15\x0c\x1a\x24\xaf\0\0\0\x04\x5b\x15\x10\x1a\x25\xaf\0\0\0\x04\x5d\x15\
\x14\0\0\xa0\0\0\0\x05\0\0\0\0\0\0\0\x27\0\0\0\x3c\0\0\0\xa4\0\0\0\xad\0\0\0\
\xb2\0\0\0\xc6\0\0\0\xce\0\0\0\xd3\0\0\0\xd7\0\0\0\xe3\0\0\0\xe7\0\0\0\xf4\0\0\
\0\xfa\0\0\0\0\x01\0\0\x0e\x01\0\0\x16\x01\0\0\x1f\x01\0\0\x33\x01\0\0\x44\x01\
\0\0\x49\x01\0\0\x55\x01\0\0\x5e\x01\0\0\x67\x01\0\0\x6e\x01\0\0\x7b\x01\0\0\
\x86\x01\0\0\x8c\x01\0\0\x94\x01\0\0\x98\x01\0\0\xab\x01\0\0\xb1\x01\0\0\xb5\
\x01\0\0\xba\x01\0\0\xc3\x01\0\0\xcd\x01\0\0\xdd\x01\0\0\xec\x01\0\0\xfb\x01\0\
\0\x55\x62\x75\x6e\x74\x75\x20\x63\x6c\x61\x6e\x67\x20\x76\x65\x72\x73\x69\x6f\
\x6e\x20\x31\x34\x2e\x30\x2e\x30\x2d\x31\x75\x62\x75\x6e\x74\x75\x31\x2e\x31\0\
\x65\x42\x50\x46\x2f\x65\x73\x70\x61\x63\x6f\x5f\x6b\x65\x72\x6e\x65\x6c\x2e\
\x63\0\x2f\x68\x6f\x6d\x65\x2f\x72\x69\x63\x61\x72\x64\x6f\x2f\x44\x6f\x63\x75\
\x6d\x65\x6e\x74\x73\x2f\x4d\x65\x73\x74\x72\x61\x64\x6f\x2f\x50\x72\x6f\x6a\
\x65\x74\x6f\x2d\x4d\x65\x73\x74\x72\x61\x64\x6f\x2f\x50\x72\x6f\x6a\x65\x74\
\x6f\x5f\x65\x42\x50\x46\x2f\x63\x6f\x64\x69\x67\x6f\x73\x5f\x65\x42\x50\x46\
\x2f\x63\x6f\x64\x69\x67\x6f\x5f\x70\x72\x6f\x70\x6f\x73\x74\x61\x2f\x41\x72\
\x71\x75\x69\x74\x65\x74\x75\x72\x61\0\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x63\
\x68\x61\x72\0\x5f\x5f\x41\x52\x52\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\
\x45\x5f\x5f\0\x6d\x61\x70\x61\x5f\x66\x64\0\x74\x79\x70\x65\0\x69\x6e\x74\0\
\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6b\x65\x79\0\x75\x6e\x73\x69\
\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x5f\x5f\x75\x33\x32\0\x76\x61\x6c\x75\x65\0\
\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x6c\x6f\x6e\x67\0\x70\x69\x6e\x6e\x69\x6e\
\x67\0\x6d\x61\x70\x61\x5f\x6d\x65\x6d\0\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\
\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\0\x62\x70\x66\x5f\x74\x72\x61\x63\x65\
\x5f\x70\x72\x69\x6e\x74\x6b\0\x6c\x6f\x6e\x67\0\x58\x44\x50\x5f\x41\x42\x4f\
\x52\x54\x45\x44\0\x58\x44\x50\x5f\x44\x52\x4f\x50\0\x58\x44\x50\x5f\x50\x41\
\x53\x53\0\x58\x44\x50\x5f\x54\x58\0\x58\x44\x50\x5f\x52\x45\x44\x49\x52\x45\
\x43\x54\0\x78\x64\x70\x5f\x61\x63\x74\x69\x6f\x6e\0\x74\x65\x73\x74\x65\0\x5f\
\x5f\x5f\x5f\x66\x6d\x74\0\x70\x74\x72\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\
\x6c\x6f\x6e\x67\x20\x6c\x6f\x6e\x67\0\x5f\x5f\x75\x36\x34\0\x63\x74\x78\0\x64\
\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\x74\x61\x5f\x6d\x65\
\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x72\
\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\x67\x72\x65\x73\x73\
\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x78\x64\x70\x5f\x6d\x64\0\x24\0\0\0\x05\0\
\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\x9f\xeb\x01\0\x18\0\0\0\0\0\0\0\xec\x01\0\0\xec\x01\0\0\x23\x02\0\0\0\0\0\0\0\
\0\0\x02\x03\0\0\0\x01\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\x01\0\0\0\0\0\0\0\x03\
\0\0\0\0\x02\0\0\0\x04\0\0\0\x02\0\0\0\x05\0\0\0\0\0\0\x01\x04\0\0\0\x20\0\0\0\
\0\0\0\0\0\0\0\x02\x06\0\0\0\0\0\0\0\0\0\0\x03\0\0\0\0\x02\0\0\0\x04\0\0\0\x01\
\0\0\0\0\0\0\0\0\0\0\x02\x08\0\0\0\x19\0\0\0\0\0\0\x08\x09\0\0\0\x1f\0\0\0\0\0\
\0\x01\x04\0\0\0\x20\0\0\0\0\0\0\0\0\0\0\x02\x0b\0\0\0\x2c\0\0\0\0\0\0\x01\x08\
\0\0\0\x40\0\0\0\x3a\0\0\0\x05\0\0\x04\x28\0\0\0\x43\0\0\0\x01\0\0\0\0\0\0\0\
\x48\0\0\0\x05\0\0\0\x40\0\0\0\x54\0\0\0\x07\0\0\0\x80\0\0\0\x58\0\0\0\x0a\0\0\
\0\xc0\0\0\0\x5e\0\0\0\x05\0\0\0\0\x01\0\0\x66\0\0\0\0\0\0\x0e\x0c\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\x02\x0f\0\0\0\x6e\0\0\0\x06\0\0\x04\x18\0\0\0\x75\0\0\0\x08\
\0\0\0\0\0\0\0\x7a\0\0\0\x08\0\0\0\x20\0\0\0\x83\0\0\0\x08\0\0\0\x40\0\0\0\x8d\
\0\0\0\x08\0\0\0\x60\0\0\0\x9d\0\0\0\x08\0\0\0\x80\0\0\0\xac\0\0\0\x08\0\0\0\
\xa0\0\0\0\0\0\0\0\x01\0\0\x0d\x02\0\0\0\xbb\0\0\0\x0e\0\0\0\xbf\0\0\0\x01\0\0\
\x0c\x10\0\0\0\x07\x02\0\0\0\0\0\x01\x01\0\0\0\x08\0\0\x01\0\0\0\0\0\0\0\x03\0\
\0\0\0\x12\0\0\0\x04\0\0\0\x04\0\0\0\x0c\x02\0\0\0\0\0\x0e\x13\0\0\0\x01\0\0\0\
\x15\x02\0\0\x01\0\0\x0f\0\0\0\0\x0d\0\0\0\0\0\0\0\x28\0\0\0\x1b\x02\0\0\x01\0\
\0\x0f\0\0\0\0\x14\0\0\0\0\0\0\0\x04\0\0\0\0\x69\x6e\x74\0\x5f\x5f\x41\x52\x52\
\x41\x59\x5f\x53\x49\x5a\x45\x5f\x54\x59\x50\x45\x5f\x5f\0\x5f\x5f\x75\x33\x32\
\0\x75\x6e\x73\x69\x67\x6e\x65\x64\x20\x69\x6e\x74\0\x75\x6e\x73\x69\x67\x6e\
\x65\x64\x20\x6c\x6f\x6e\x67\0\x6d\x61\x70\x61\x5f\x6d\x65\x6d\0\x74\x79\x70\
\x65\0\x6d\x61\x78\x5f\x65\x6e\x74\x72\x69\x65\x73\0\x6b\x65\x79\0\x76\x61\x6c\
\x75\x65\0\x70\x69\x6e\x6e\x69\x6e\x67\0\x6d\x61\x70\x61\x5f\x66\x64\0\x78\x64\
\x70\x5f\x6d\x64\0\x64\x61\x74\x61\0\x64\x61\x74\x61\x5f\x65\x6e\x64\0\x64\x61\
\x74\x61\x5f\x6d\x65\x74\x61\0\x69\x6e\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\
\x64\x65\x78\0\x72\x78\x5f\x71\x75\x65\x75\x65\x5f\x69\x6e\x64\x65\x78\0\x65\
\x67\x72\x65\x73\x73\x5f\x69\x66\x69\x6e\x64\x65\x78\0\x63\x74\x78\0\x74\x65\
\x73\x74\x65\0\x78\x64\x70\0\x2f\x68\x6f\x6d\x65\x2f\x72\x69\x63\x61\x72\x64\
\x6f\x2f\x44\x6f\x63\x75\x6d\x65\x6e\x74\x73\x2f\x4d\x65\x73\x74\x72\x61\x64\
\x6f\x2f\x50\x72\x6f\x6a\x65\x74\x6f\x2d\x4d\x65\x73\x74\x72\x61\x64\x6f\x2f\
\x50\x72\x6f\x6a\x65\x74\x6f\x5f\x65\x42\x50\x46\x2f\x63\x6f\x64\x69\x67\x6f\
\x73\x5f\x65\x42\x50\x46\x2f\x63\x6f\x64\x69\x67\x6f\x5f\x70\x72\x6f\x70\x6f\
\x73\x74\x61\x2f\x41\x72\x71\x75\x69\x74\x65\x74\x75\x72\x61\x2f\x2e\x2f\x65\
\x42\x50\x46\x2f\x65\x73\x70\x61\x63\x6f\x5f\x6b\x65\x72\x6e\x65\x6c\x2e\x63\0\
\x69\x6e\x74\x20\x74\x65\x73\x74\x65\x28\x73\x74\x72\x75\x63\x74\x20\x78\x64\
\x70\x5f\x6d\x64\x20\x2a\x63\x74\x78\x20\x29\x7b\0\x20\x20\x20\x20\x5f\x5f\x75\
\x33\x32\x20\x6b\x65\x79\x3d\x30\x3b\0\x20\x20\x20\x20\x70\x74\x72\x20\x3d\x20\
\x62\x70\x66\x5f\x6d\x61\x70\x5f\x6c\x6f\x6f\x6b\x75\x70\x5f\x65\x6c\x65\x6d\
\x28\x26\x6d\x61\x70\x61\x5f\x66\x64\x2c\x20\x26\x6b\x65\x79\x29\x3b\0\x20\x20\
\x20\x20\x69\x66\x20\x28\x70\x74\x72\x20\x21\x3d\x20\x4e\x55\x4c\x4c\x29\x7b\0\
\x20\x20\x20\x20\x20\x20\x20\x20\x62\x70\x66\x5f\x70\x72\x69\x6e\x74\x6b\x28\
\x22\x56\x61\x6c\x6f\x72\x20\x64\x6f\x20\x66\x64\x20\x6e\x6f\x20\x6d\x61\x70\
\x61\x3a\x20\x25\x64\x5c\x6e\x22\x2c\x20\x2a\x70\x74\x72\x29\x3b\0\x09\x72\x65\
\x74\x75\x72\x6e\x20\x58\x44\x50\x5f\x50\x41\x53\x53\x3b\0\x63\x68\x61\x72\0\
\x5f\x6c\x69\x63\x65\x6e\x73\x65\0\x2e\x6d\x61\x70\x73\0\x6c\x69\x63\x65\x6e\
\x73\x65\0\0\x9f\xeb\x01\0\x20\0\0\0\0\0\0\0\x14\0\0\0\x14\0\0\0\x7c\0\0\0\x90\
\0\0\0\0\0\0\0\x08\0\0\0\xc5\0\0\0\x01\0\0\0\0\0\0\0\x11\0\0\0\x10\0\0\0\xc5\0\
\0\0\x07\0\0\0\0\0\0\0\xc9\0\0\0\x48\x01\0\0\0\xb0\0\0\x08\0\0\0\xc9\0\0\0\x68\
\x01\0\0\x0b\xb4\0\0\x18\0\0\0\xc9\0\0\0\0\0\0\0\0\0\0\0\x20\0\0\0\xc9\0\0\0\
\x79\x01\0\0\x0b\xc0\0\0\x38\0\0\0\xc9\0\0\0\xa8\x01\0\0\x09\xc8\0\0\x40\0\0\0\
\xc9\0\0\0\xbe\x01\0\0\x09\xd0\0\0\xb8\0\0\0\xc9\0\0\0\xf5\x01\0\0\x02\xdc\0\0\
\0\0\0\0\x0c\0\0\0\xff\xff\xff\xff\x04\0\x08\0\x08\x7c\x0b\0\x14\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xc8\0\0\0\0\0\0\0\xc9\0\0\0\x05\0\x08\0\x9b\0\0\0\x08\x01\x01\
\xfb\x0e\x0d\0\x01\x01\x01\x01\0\0\0\x01\0\0\x01\x01\x01\x1f\x05\0\0\0\0\x68\0\
\0\0\x6f\0\0\0\x88\0\0\0\x99\0\0\0\x03\x01\x1f\x02\x0f\x05\x1e\x05\xac\0\0\0\0\
\xa5\xd3\xc5\x5f\x10\xdd\x7c\xab\x5a\x2f\x81\x62\xd6\xc5\x4f\x29\xc1\0\0\0\x01\
\xa5\xd3\xc5\x5f\x10\xdd\x7c\xab\x5a\x2f\x81\x62\xd6\xc5\x4f\x29\xd1\0\0\0\x02\
\xb8\x10\xf2\x70\x73\x3e\x10\x63\x19\xb6\x7e\xf5\x12\xc6\x24\x6e\xdc\0\0\0\x03\
\xea\xdf\x4a\x8b\xcf\x7a\xc4\xe7\xbd\x6d\x2c\xb6\x66\x45\x22\x42\xee\0\0\0\x04\
\x9a\xe8\xd3\xe7\x79\x4a\xed\x0d\xb7\xa0\xa2\x34\x5a\xb8\x81\xee\0\x09\x02\0\0\
\0\0\0\0\0\0\x03\x2b\x01\x05\x0b\x0a\x21\x06\x03\x53\x20\x06\x03\x30\x2e\x05\
\x09\x3e\x22\x05\x02\xe7\x02\x02\0\x01\x01\x2f\x68\x6f\x6d\x65\x2f\x72\x69\x63\
\x61\x72\x64\x6f\x2f\x44\x6f\x63\x75\x6d\x65\x6e\x74\x73\x2f\x4d\x65\x73\x74\
\x72\x61\x64\x6f\x2f\x50\x72\x6f\x6a\x65\x74\x6f\x2d\x4d\x65\x73\x74\x72\x61\
\x64\x6f\x2f\x50\x72\x6f\x6a\x65\x74\x6f\x5f\x65\x42\x50\x46\x2f\x63\x6f\x64\
\x69\x67\x6f\x73\x5f\x65\x42\x50\x46\x2f\x63\x6f\x64\x69\x67\x6f\x5f\x70\x72\
\x6f\x70\x6f\x73\x74\x61\x2f\x41\x72\x71\x75\x69\x74\x65\x74\x75\x72\x61\0\x2e\
\x2f\x65\x42\x50\x46\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\x2f\x61\
\x73\x6d\x2d\x67\x65\x6e\x65\x72\x69\x63\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\
\x75\x64\x65\x2f\x62\x70\x66\0\x2f\x75\x73\x72\x2f\x69\x6e\x63\x6c\x75\x64\x65\
\x2f\x6c\x69\x6e\x75\x78\0\x65\x42\x50\x46\x2f\x65\x73\x70\x61\x63\x6f\x5f\x6b\
\x65\x72\x6e\x65\x6c\x2e\x63\0\x65\x73\x70\x61\x63\x6f\x5f\x6b\x65\x72\x6e\x65\
\x6c\x2e\x63\0\x69\x6e\x74\x2d\x6c\x6c\x36\x34\x2e\x68\0\x62\x70\x66\x5f\x68\
\x65\x6c\x70\x65\x72\x5f\x64\x65\x66\x73\x2e\x68\0\x62\x70\x66\x2e\x68\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xd8\0\0\0\x04\0\xf1\
\xff\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\x01\0\0\0\0\x03\0\xb8\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x09\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0c\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x0e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x0f\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x03\0\x15\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\
\0\x17\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\0\x19\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\xa0\0\0\0\x12\0\x03\0\0\0\0\0\0\0\0\0\xc8\0\0\0\0\0\0\0\xd0\0\0\
\0\x11\0\x05\0\0\0\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\xa6\0\0\0\x11\0\x07\0\0\0\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x01\0\0\0\x0d\0\0\0\x08\0\0\0\0\0\
\0\0\x03\0\0\0\x05\0\0\0\x11\0\0\0\0\0\0\0\x03\0\0\0\x06\0\0\0\x15\0\0\0\0\0\0\
\0\x03\0\0\0\x0a\0\0\0\x1f\0\0\0\0\0\0\0\x03\0\0\0\x08\0\0\0\x23\0\0\0\0\0\0\0\
\x03\0\0\0\x04\0\0\0\x08\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x0c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x10\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x18\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x1c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x20\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x24\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x28\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x2c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x30\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x34\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x38\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x3c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x40\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x44\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x48\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x4c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x50\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x54\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x58\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x5c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x60\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x64\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x6c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x70\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x74\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x78\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x7c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x80\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x84\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x88\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x8c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x90\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x94\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\x98\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x9c\0\0\0\0\0\0\0\
\x03\0\0\0\x07\0\0\0\xa0\0\0\0\0\0\0\0\x03\0\0\0\x07\0\0\0\x08\0\0\0\0\0\0\0\
\x02\0\0\0\x0e\0\0\0\x10\0\0\0\0\0\0\0\x02\0\0\0\x0d\0\0\0\x18\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x20\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\xe4\x01\0\0\0\0\0\0\
\x04\0\0\0\x0d\0\0\0\xfc\x01\0\0\0\0\0\0\x04\0\0\0\x0e\0\0\0\x2c\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x40\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x50\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x60\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x70\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\x80\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x90\0\0\0\0\0\0\0\
\x04\0\0\0\x02\0\0\0\xa0\0\0\0\0\0\0\0\x04\0\0\0\x02\0\0\0\x14\0\0\0\0\0\0\0\
\x03\0\0\0\x09\0\0\0\x18\0\0\0\0\0\0\0\x02\0\0\0\x02\0\0\0\x22\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x26\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x2a\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x2e\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x32\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x3e\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x53\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x68\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\x7d\0\0\0\0\0\0\0\
\x03\0\0\0\x0b\0\0\0\x92\0\0\0\0\0\0\0\x03\0\0\0\x0b\0\0\0\xaa\0\0\0\0\0\0\0\
\x02\0\0\0\x02\0\0\0\x0c\x0d\x0e\0\x2e\x64\x65\x62\x75\x67\x5f\x61\x62\x62\x72\
\x65\x76\0\x2e\x74\x65\x78\x74\0\x2e\x72\x65\x6c\x2e\x42\x54\x46\x2e\x65\x78\
\x74\0\x2e\x64\x65\x62\x75\x67\x5f\x6c\x6f\x63\x6c\x69\x73\x74\x73\0\x2e\x72\
\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\x5f\x6f\x66\x66\x73\x65\x74\
\x73\0\x2e\x6d\x61\x70\x73\0\x2e\x64\x65\x62\x75\x67\x5f\x73\x74\x72\0\x2e\x64\
\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\x5f\x73\x74\x72\0\x2e\x72\x65\x6c\x2e\x64\
\x65\x62\x75\x67\x5f\x61\x64\x64\x72\0\x2e\x72\x65\x6c\x78\x64\x70\0\x2e\x72\
\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x69\x6e\x66\x6f\0\x2e\x6c\x6c\x76\x6d\x5f\
\x61\x64\x64\x72\x73\x69\x67\0\x74\x65\x73\x74\x65\0\x5f\x6c\x69\x63\x65\x6e\
\x73\x65\0\x2e\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x6c\x69\x6e\x65\0\x2e\
\x72\x65\x6c\x2e\x64\x65\x62\x75\x67\x5f\x66\x72\x61\x6d\x65\0\x6d\x61\x70\x61\
\x5f\x66\x64\0\x65\x73\x70\x61\x63\x6f\x5f\x6b\x65\x72\x6e\x65\x6c\x2e\x63\0\
\x2e\x73\x74\x72\x74\x61\x62\0\x2e\x73\x79\x6d\x74\x61\x62\0\x2e\x72\x65\x6c\
\x2e\x42\x54\x46\0\x4c\x42\x42\x30\x5f\x32\0\x2e\x72\x6f\x64\x61\x74\x61\x2e\
\x73\x74\x72\x31\x2e\x31\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\xe8\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x03\x14\0\0\0\0\
\0\0\x17\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\
\0\0\0\x01\0\0\0\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7e\0\0\0\x01\0\0\0\
\x06\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\xc8\0\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x7a\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\x80\x0f\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x1b\0\0\0\x03\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x49\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x08\x01\0\0\0\0\0\0\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x08\x01\0\0\x01\0\0\0\x32\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x30\x01\0\0\0\0\0\0\x19\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\
\0\0\0\0\0\0\xa7\0\0\0\x01\0\0\0\x03\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x49\x01\0\0\
\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x22\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x4d\x01\0\0\0\0\0\0\x29\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\x01\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x76\x01\0\0\0\0\0\0\x36\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x86\0\0\0\x01\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\xac\x02\0\0\0\0\0\0\xd0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x82\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x90\x0f\0\0\0\0\0\0\x50\0\0\0\0\0\0\0\x1b\0\0\0\x0a\0\0\0\x08\0\0\0\
\0\0\0\0\x10\0\0\0\0\0\0\0\x36\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\x7c\x04\0\0\0\0\0\0\xa4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x32\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xe0\x0f\0\0\0\
\0\0\0\x70\x02\0\0\0\0\0\0\x1b\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\
\0\0\x4f\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x20\x05\0\0\0\0\0\0\
\x02\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\x6e\0\
\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x22\x07\0\0\0\0\0\0\x28\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x6a\0\0\0\x09\0\0\0\
\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x12\0\0\0\0\0\0\x40\0\0\0\0\0\0\0\x1b\0\
\0\0\x0f\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xfc\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\x4c\x07\0\0\0\0\0\0\x27\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xf8\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x90\x12\0\0\0\0\0\0\x20\0\0\0\0\0\0\0\x1b\0\0\0\x11\0\0\0\x08\0\0\
\0\0\0\0\0\x10\0\0\0\0\0\0\0\x19\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\
\0\x74\x0b\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x15\0\0\0\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xb0\x12\0\0\
\0\0\0\0\x80\0\0\0\0\0\0\0\x1b\0\0\0\x13\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\
\0\0\xc3\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x28\x0c\0\0\0\0\0\0\
\x28\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x08\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xbf\0\0\0\
\x09\0\0\0\x40\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x30\x13\0\0\0\0\0\0\x20\0\0\0\0\0\
\0\0\x1b\0\0\0\x15\0\0\0\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\xb3\0\0\0\x01\0\0\
\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x50\x0c\0\0\0\0\0\0\xcd\0\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\xaf\0\0\0\x09\0\0\0\x40\0\0\0\0\0\
\0\0\0\0\0\0\0\0\0\0\x50\x13\0\0\0\0\0\0\xb0\0\0\0\0\0\0\0\x1b\0\0\0\x17\0\0\0\
\x08\0\0\0\0\0\0\0\x10\0\0\0\0\0\0\0\x5a\0\0\0\x01\0\0\0\x30\0\0\0\0\0\0\0\0\0\
\0\0\0\0\0\0\x1d\x0d\0\0\0\0\0\0\xf4\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\0\0\
\0\0\0\x01\0\0\0\0\0\0\0\x92\0\0\0\x03\x4c\xff\x6f\0\0\0\x80\0\0\0\0\0\0\0\0\0\
\0\0\0\0\x14\0\0\0\0\0\0\x03\0\0\0\0\0\0\0\x1b\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\
\0\0\0\0\0\0\0\0\xf0\0\0\0\x02\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x18\x0e\0\
\0\0\0\0\0\x68\x01\0\0\0\0\0\0\x01\0\0\0\x0c\0\0\0\x08\0\0\0\0\0\0\0\x18\0\0\0\
\0\0\0\0";

	*sz = sizeof(data) - 1;
	return (const void *)data;
}

#ifdef __cplusplus
struct espaco_kernel *espaco_kernel::open(const struct bpf_object_open_opts *opts) { return espaco_kernel__open_opts(opts); }
struct espaco_kernel *espaco_kernel::open_and_load() { return espaco_kernel__open_and_load(); }
int espaco_kernel::load(struct espaco_kernel *skel) { return espaco_kernel__load(skel); }
int espaco_kernel::attach(struct espaco_kernel *skel) { return espaco_kernel__attach(skel); }
void espaco_kernel::detach(struct espaco_kernel *skel) { espaco_kernel__detach(skel); }
void espaco_kernel::destroy(struct espaco_kernel *skel) { espaco_kernel__destroy(skel); }
const void *espaco_kernel::elf_bytes(size_t *sz) { return espaco_kernel__elf_bytes(sz); }
#endif /* __cplusplus */

__attribute__((unused)) static void
espaco_kernel__assert(struct espaco_kernel *s __attribute__((unused)))
{
#ifdef __cplusplus
#define _Static_assert static_assert
#endif
#ifdef __cplusplus
#undef _Static_assert
#endif
}

#endif /* __ESPACO_KERNEL_SKEL_H__ */
